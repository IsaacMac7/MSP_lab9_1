import { MetaDataSet } from './MetaData';
import { PluginServiceGlobalRegistration, PluginServiceRegistrationOptions, Easing } from 'chart.js';
import { MetaSection } from './MetaSection';
interface ChartEx extends Chart {
    $$id: number;
}
declare class Plugin implements PluginServiceGlobalRegistration, PluginServiceRegistrationOptions {
    id: string;
    beforeInit(chart: any): void;
    /**
     * Called after update (when the chart is created and when chart.update() is called)
     * @param chart
     */
    beforeUpdate?(chart: Chart, options?: any): void;
    /**
     * It's called once before all the drawing
     * @param chart
     */
    beforeRender(chart: Chart, options?: any): void;
    /** Draws the vertical lines before the datasets are drawn */
    beforeDatasetsDraw(chart: Chart, easing: Easing, options?: any): void;
    /** Draws the regression lines */
    afterDatasetsDraw(chart: Chart, easing: Easing, options?: any): void;
    destroy(chart: Chart): void;
    /** Get dataset's meta data */
    getDataset(chart: ChartEx, datasetIndex: number): MetaDataSet;
    /** Get dataset's meta sections */
    getSections(chart: ChartEx, datasetIndex: number): MetaSection[];
}
export declare const ChartRegressions: Plugin;
export {};
